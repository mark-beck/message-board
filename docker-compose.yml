services:
  reverse-proxy:

    image: traefik:v2.5

    command:
      - --api.insecure=true # Enables web ui
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure # redirect http to https
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      
    ports:
      - "80:80"
      - "443:443"
      # web ui
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik/:/etc/traefik/dynamic/
      - ./cert/:/etc/certs/

  content_service:
    image: content_service:latest
    build:
      context: content-service
      dockerfile: Dockerfile
    volumes:
      - ./cert/jwt.public.pem:/etc/certs/jwt.public.pem:r
      - /etc/localtime:/etc/localtime
    labels:
      - "traefik.http.routers.content.rule=Host(`localhost`) && PathPrefix(`/content`)"
      - "traefik.http.services.content.loadbalancer.server.scheme=http"
      - "traefik.http.services.content.loadbalancer.server.port=8080"
      - "traefik.http.routers.content.entrypoints=websecure"
      - "traefik.http.routers.content.tls=true"
      

  auth_server:
    image: auth_server:latest
    build: 
        context: auth_server
        dockerfile: Dockerfile
    volumes:
      - ./config/auth_server/auth_config.toml:/server/auth_config.toml:rw
      - ./cert/:/server/cert/
    depends_on:
      - mongo
    environment:
      RUST_BACKTRACE: 1
    labels:
      - "traefik.http.routers.auth.rule=Host(`localhost`) && (PathPrefix(`/auth`) || PathPrefix(`/admin`))"
      - "traefik.http.services.auth.loadbalancer.server.scheme=http"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls=true"

  client:
    image: client:latest
    build: 
        context: client
        dockerfile: Dockerfile
    labels:
      - "traefik.http.routers.panel.rule=Host(`localhost`)"
      - "traefik.http.services.panel.loadbalancer.server.scheme=http"
      - "traefik.http.services.panel.loadbalancer.server.port=80"
      - "traefik.http.routers.panel.entrypoints=websecure"
      - "traefik.http.routers.panel.tls=true"

  resizer:
    image: resizer:latest
    build: 
        context: image_resizer
        dockerfile: Dockerfile
    environment:
      PORT: 8015

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
